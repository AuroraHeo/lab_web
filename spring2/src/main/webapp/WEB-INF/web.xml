<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://jakarta.ee/xml/ns/jakartaee"
    xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd"
    id="WebApp_ID" version="6.0">
    <display-name>spring2</display-name>

    <!-- Context parameter: WAS의 환경 설정 변수 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/application-context.xml</param-value> <!-- xml 만듦 -->
    </context-param>
    
    <!-- 리스너(Listener) 설정 -->
    <!-- 스프링 프레임워크의 컨텍스트 로더 리스너 설정:
        'WAS에서 ContextLoaded이벤트가 발생했을 때', 컨텍스트 파라미터들 중에서
        contextConfigLocation 파라미터 값(xml 파일 위치와 이름 ex./WEB-INF/application-context.xml)
        을 찾아서 xml 파일을 읽고 스프링 프레임워크를 '구동시키는 리스너'.
     -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener> <!-- 이벤트를 처리하는 리스너(ex.ContextLoaderListener)를 지정 -->
    
    <!-- 필터(Filter) 설정 -->
    <!-- 스프링 프레임워크에서 사용(제공)하는 문자열 인코딩 필터 설정-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern> <!-- 서블릿으로 이동하기 전, '모든 요청주소'를 걸러내는 필터-->
    </filter-mapping>
    
    <!-- 인증(로그인 여부 체크) 필터-->
    <filter>
        <filter-name>authenticationFilter</filter-name>
        <filter-class>com.itwill.spring2.filter.AuthenticationFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>authenticationFilter</filter-name>
        <url-pattern>/post/create</url-pattern>
        <url-pattern>/post/details</url-pattern>
        <url-pattern>/post/modify</url-pattern>
        <url-pattern>/post/update</url-pattern>
        <url-pattern>/post/delete</url-pattern>
        <url-pattern>/api/comment/*</url-pattern>
    </filter-mapping>
    
    <!-- 서블릿(Servlet) 설정 -->
    <!-- 스프링 프레임워크에서 제공하는 디스패쳐 서블릿 설정 -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/servlet-context.xml</param-value> <!-- xml 만듦 -->
        </init-param>
        <load-on-startup>1</load-on-startup> <!--다른 서블릿보다 우선순위 1번! -->
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name><!-- front controller, 다른 controller에게 기능을 위임. -->
        <url-pattern>/</url-pattern> <!-- 모든 요청주소(context root와 그 하위의 모든)를 하나의 서블릿이 처리하도록 -->
    </servlet-mapping>
    
    
</web-app>

<!-- spring1의 web.xml을 복붙 -->
<!-- 2. web.xml : 웹서버가 처음에 환경설정을 하기 위해. listener, filter, servlet 설정 -->
<!-- Listener, Filter servlet 객체를 가지고 있는 웹 : 웹 컨테이너 -->
<!-- tomcat의 web container에서 listener, filter, servlet이 있고, listener가 spring container를 가지고 있고 spring container 안에 dao, service, controller 등등이 있음.  -->